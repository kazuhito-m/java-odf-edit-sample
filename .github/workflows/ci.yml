name: ci

on:
  push:
    branches:
      - '*'
    tags-ignore:
      - '*'
  pull_request:

jobs:
  ci:
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        jdk: [ 19 ]
        postgres: [ 15.0 ]

    runs-on: ${{ matrix.os }}

    services:
      postgres:
        image: postgres:${{ matrix.postgres }}-alpine
        env:
          POSTGRES_PASSWORD: postgres
          LANG: ja_JP.UTF-8
          LANGUAGE: ja_JP.UTF-8
          LC_ALL: ja_JP.UTF-8
          TZ: Asia/Tokyo
        ports:
          - 5432:5432

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Initialize Postgres Database
        run: psql -f ${{ github.workspace }}/env/local/postgres/init_sql/01_createdb.sql postgresql://postgres:postgres@localhost:5432/postgres

      - name: Setup JDK ${{ matrix.jdk }}
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.jdk }}

      - name: Cache gradle
        uses: actions/cache@v2.1.4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run tests
        run: ./gradlew clean test

      - name: Register artifacts
        uses: actions/upload-artifact@v2
        with:
          name: test-reports
          path: ./build/reports/tests/test
        if: failure()

      - name: Notify Discord
        uses: sarisia/actions-status-discord@v1
        with:
          webhook:
            ${{ secrets.DISCORD_WEBHOOK_URL }}
        if: failure()
