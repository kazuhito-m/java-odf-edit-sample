buildscript {
    ext {
        springBootVersion = '2.7.6'
        encoding = 'UTF-8'
        compatibility = JavaVersion.VERSION_17
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'org.springframework.boot' version '2.7.6'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.dddjava.jig-gradle-plugin' version '2022.11.1'
    id 'org.seasar.doma.compile' version '1.1.1-beta1'
    id 'jacoco'
    id "org.sonarqube" version "3.5.0.2730"
}

group = 'com.github.kazuhito_m'
version = '0.0.1-SNAPSHOT'

jigReports.dependsOn(clean, compileJava, processResources)
bootRun.mustRunAfter(clean)

sourceCompatibility = compatibility
targetCompatibility = compatibility

jacoco.toolVersion = '0.8.8'

tasks.withType(Test) { systemProperty "file.encoding", encoding }

// for Integration(E2E) test
configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeClasspath.extendsFrom testRuntimeClasspath
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}
sourceSets {
    integrationTest {
        java.srcDir file('src/integration-test/java')
        resources.srcDir file('src/integration-test/resources')
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}
task integrationTest(type: Test) {
    group 'verification'
    description 'Runs the integration tests.'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    mustRunAfter test
}
integrationTest {
    useJUnitPlatform()
}
check.dependsOn integrationTest

idea.module.inheritOutputDirs = true


repositories {
    jcenter()
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-thymeleaf")

    def doma2Version = '2.53.1'
    implementation('org.seasar.doma:doma-core:' + doma2Version)
    annotationProcessor('org.seasar.doma:doma-processor:' + doma2Version)
    implementation("org.seasar.doma.boot:doma-spring-boot-starter:1.7.0")
    implementation("org.springframework.boot:spring-boot-starter-jdbc")

    implementation('org.jopendocument:jOpenDocument:1.3')

    implementation("org.flywaydb:flyway-core:9.10.0")

    runtimeOnly("com.h2database:h2")
    runtimeOnly('org.postgresql:postgresql:42.5.1')

    testImplementation('org.springframework.boot:spring-boot-starter-test')

    integrationTestImplementation('com.codeborne:selenide:6.10.3')
}

test {
    useJUnitPlatform()
}
